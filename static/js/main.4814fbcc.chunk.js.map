{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Robot.js","components/Title.js","containers/App.js","serviceWorker.js","index.js"],"names":["Card","_ref","name","username","image","id","react_default","a","createElement","className","alt","src","concat","CardList","Robot","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","email","Title","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","filteredRobot","filter","toLowerCase","includes","lenght","components_Title","components_SearchBox","components_Scroll","components_CardList","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNAceA,EAZF,SAAAC,GAAiC,IAA/BC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,SAAcC,GAAWH,EAAfI,GAAeJ,EAAXG,OACjC,OACAE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,gEACfH,EAAAC,EAAAC,cAAA,OAAKE,IAAK,SAASC,IAAG,GAAAC,OAAKR,KAC3BE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKN,GACLI,EAAAC,EAAAC,cAAA,SAAIL,MCaMU,EAlBC,SAAAZ,GAAY,IAAVa,EAAUb,EAAVa,MACjB,OACCR,EAAAC,EAAAC,cAAA,eACCM,EAAMC,IAAI,SAACC,EAAMC,GAChB,OACCX,EAAAC,EAAAC,cAACU,EAAD,CACAC,IAAMF,EACNb,MAAQU,EAAMG,GAAGb,MACjBC,GAAKS,EAAMG,GAAGZ,GACdH,KAAOY,EAAMG,GAAGf,KAChBC,SAAWW,EAAMG,GAAGd,eCGViB,EAdG,SAAAnB,GAAkCA,EAA/BoB,YAA+B,IAAlBC,EAAkBrB,EAAlBqB,aAC9B,OACAhB,EAAAC,EAAAC,cAAA,OAAKC,UAAW,OAClBH,EAAAC,EAAAC,cAAA,SACAC,UAAW,oCACVc,KAAK,SACJrB,KAAM,YACLsB,YAAa,mBACbC,SAAWH,MCADI,EARA,SAACC,GACf,OACCrB,EAAAC,EAAAC,cAAA,OAAKoB,MAAQ,CAACC,SAAU,SAAUC,OAAQ,wBAAyBC,OAAQ,UACzEJ,EAAMK,WCLGlB,SAAQ,CACjB,CACET,GAAI,EACJH,KAAM,mBACNC,SAAU,kBACV8B,MAAO,oBACP7B,MAAO,gDAET,CACEC,GAAI,EACJH,KAAM,2BACNC,SAAU,kBACV8B,MAAO,oBACP7B,MAAO,+CAET,CACEC,GAAI,EACJH,KAAM,oBACNC,SAAU,iBACV8B,MAAO,qBACP7B,MAAO,+CAET,CACEC,GAAI,EACJH,KAAM,kBACNC,SAAU,kBACV8B,MAAO,4BACP7B,MAAO,qEAET,CACEC,GAAI,EACJH,KAAM,WACNC,SAAU,kBACV8B,MAAO,2BACP7B,MAAO,iDAET,CACEC,GAAI,EACJH,KAAM,sBACNC,SAAU,kBACV8B,MAAO,0BACP7B,MAAO,iDAET,CACEC,GAAI,EACJH,KAAM,iBACNC,SAAU,kBACV8B,MAAO,yBACP7B,MAAO,mDAET,CACEC,GAAI,EACJH,KAAM,0BACNC,SAAU,kBACV8B,MAAO,uBACP7B,MAAO,iDAET,CACEC,GAAI,EACJH,KAAM,wBACNC,SAAU,kBACV8B,MAAO,0BACP7B,MAAO,iDAET,CACEC,GAAI,GACJH,KAAM,0BACNC,SAAU,kBACV8B,MAAO,yBACP7B,MAAO,mDAER,CACCC,GAAI,GACJH,KAAM,2BACNC,SAAU,kBACV8B,MAAO,wBACP7B,MAAO,mDAET,CACEC,GAAI,GACJH,KAAM,sBACNC,SAAU,kBACV8B,MAAO,qBACP7B,MAAO,mDC3EE8B,EANF,WACZ,OACC5B,EAAAC,EAAAC,cAAA,4BCwCa2B,cAjCd,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAODI,eAAiB,SAACC,GACjBR,EAAKS,SAAS,CACbxB,YAAauB,EAAME,OAAOC,SAR3BX,EAAKY,MAAO,CACXlC,MAAOA,EACPO,YAAa,IAJFe,wEAcJ,IAAAa,EAAAV,KACFW,EAAgBX,KAAKS,MAAMlC,MAAMqC,OAAO,SAAArC,GAAK,OAAIA,EAAMZ,KAAKkD,cAChEC,SAASJ,EAAKD,MAAM3B,YAAY+B,iBAElC,OAAoB,IAAjBtC,EAAMwC,OACDhD,EAAAC,EAAAC,cAAA,qBAGNF,EAAAC,EAAAC,cAAA,OAAKC,UAAW,MAChBH,EAAAC,EAAAC,cAAC+C,EAAD,MACAjD,EAAAC,EAAAC,cAACgD,EAAD,CAAWlC,aAAeiB,KAAKI,iBAC/BrC,EAAAC,EAAAC,cAACiD,EAAD,KACAnD,EAAAC,EAAAC,cAACkD,EAAD,CAAU5C,MAAQoC,aA3BJS,aCEEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,iECVNC,IAASC,OAAO5D,EAAAC,EAAAC,cAAC2D,EAAD,MAAQC,SAASC,eAAe,SDyH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4814fbcc.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, username, id, image}) => {\r\n\t\treturn(\r\n\t\t<div className= 'bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5 tc pointer '>\r\n\t\t\t<img alt= 'robots' src={`${image}`}/>\r\n\t\t\t<div>\r\n\t\t\t  <h2>{name}</h2>\r\n\t\t\t  <p>{username}</p>\r\n\t\t\t</div> \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList= ({Robot}) =>{\r\n\treturn(\r\n\t\t<div> {\r\n\t\t\tRobot.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\tkey= {i}\r\n\t\t\t\t\timage= {Robot[i].image} \r\n\t\t\t\t\tid= {Robot[i].id} \r\n\t\t\t\t\tname= {Robot[i].name} \r\n\t\t\t\t\tusername= {Robot[i].username}/>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange}) => {\r\n    return(\r\n\t   <div className= \"pa2\">\r\n\t\t<input\r\n\t\tclassName= \"pa3 ba b- -green bg-lightest-blue\"\r\n\t\t type=\"search\"\r\n\t\t  name =\"SearchBox\"\r\n\t\t   placeholder= \"Find RoboFriends\"\r\n\t\t   onChange= {searchChange}\r\n\t\t   /> \r\n\t\t</div>\r\n\t\t);\r\n} \r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n\treturn(\r\n\t\t<div style= {{overflow: 'scroll', border: '5px solid light-green', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Scroll;","export const Robot = [\r\n    {\r\n      id: 1,\r\n      name: 'Francis is Alive',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Sincere@april.biz',\r\n      image: 'https://i.postimg.cc/Bn5wWKvy/1.jpg/?200x200'\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Rich Poor Miserable love',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Shanna@melissa.tv',\r\n      image: 'https://i.postimg.cc/FHs9Wq0k/2.jpg?200x200'\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Cant Win this War',\r\n      username: 'Moshod Adebayo',\r\n      email: 'Nathan@yesenia.net',\r\n      image: 'https://i.postimg.cc/SNZ0sKzj/3.jpg?200x200'\r\n    },\r\n    {\r\n      id: 4,\r\n      name: 'Ancient Trouble',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Julianne.OConner@kory.org',\r\n      image: 'https://i.postimg.cc/Fz1LtZdh/Webp-net-compress-image.jpg?200x200'\r\n    },\r\n    {\r\n      id: 5,\r\n      name: 'On Death',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Lucio_Hettinger@annie.ca',\r\n      image: 'https://i.postimg.cc/6QhCJT35/5.jpg/5?200x200'\r\n    },\r\n    {\r\n      id: 6,\r\n      name: 'You Are Green Again',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Karley_Dach@jasper.info',\r\n      image: 'https://i.postimg.cc/pdVJdK3n/6.jpg/6?200x200'\r\n    },\r\n    {\r\n      id: 7,\r\n      name: 'Artist Despair',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Telly.Hoeger@billy.biz',\r\n      image: 'https://i.postimg.cc/G3T9vHC8/7.jpg/4/7?200x200'\r\n    },\r\n    {\r\n      id: 8,\r\n      name: 'Gitty Like(Part 3 to 7)',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Sherwood@rosamond.me',\r\n      image: 'https://i.postimg.cc/4xjXf1YW/8.jpg/8?200x200'\r\n    },\r\n    {\r\n      id: 9,\r\n      name: 'The Soldier Encounter',\r\n      username: 'Moshood Adebayo',\r\n      email: 'Chaim_McDermott@dana.io',\r\n      image: 'https://i.postimg.cc/C1FXSZsv/9.jpg/9?200x200'\r\n    },\r\n    {\r\n      id: 10,\r\n      name: 'What We Are Looking For',\r\n      username: 'Moshhod Adebayo',\r\n      email: 'Rey.Padberg@karina.biz',\r\n      image: 'https://i.postimg.cc/MKk4pr5M/10.jpg/10?200x200'\r\n    },\r\n     {\r\n      id: 11,\r\n      name: 'Lucy Where Have You Been',\r\n      username: 'Moshood Adebayo',\r\n      email: 'prodigy4441@gmail.com',\r\n      image: 'https://i.postimg.cc/RVRRxPDz/11.jpg/11?200x200'\r\n    },\r\n    {\r\n      id: 12,\r\n      name: 'Maryam Wrote a Book',\r\n      username: 'Moshood Adebayo',\r\n      email: 'ab_salas@gmail.com',\r\n      image: 'https://i.postimg.cc/J4Pb2ssr/12.jpg/?200x200'\r\n    }\r\n  ];\r\n  ","import React from 'react';\r\n\r\nconst Title= () => {\r\n\treturn(\r\n\t\t<h1>Moshood Books</h1>\r\n\t\t);\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\n// import Card from '../components/Card';\r\nimport './App.css';\r\nimport { Robot } from '../components/Robot';\r\nimport Title from '../components/Title';\r\n\r\n\r\nclass App extends Component{\r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state= {\r\n\t\t\tRobot: Robot,\r\n\t\t\tsearchfield: '' \r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) =>{\r\n\t\tthis.setState({ \r\n\t\t\tsearchfield: event.target.value\r\n\t\t})\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst filteredRobot = this.state.Robot.filter(Robot => Robot.name.toLowerCase()\r\n\t\t\t.includes(this.state.searchfield.toLowerCase()))\r\n\r\n\t\tif(Robot.lenght === 0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t}else {\r\n\t\treturn( \r\n\t\t\t\t<div className= \"tc\">\r\n\t\t\t\t<Title/>\r\n\t\t\t\t<SearchBox searchChange= {this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t<CardList Robot= {filteredRobot}/>\t\r\n\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}  \r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}